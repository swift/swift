Import("env")

if env["SCONS_STAGE"] == "flags" :
    env["LIMBER_FLAGS"] = {
        "LIBPATH": [Dir(".")],
        "LIBS": ["Limber"],
    }

elif env["SCONS_STAGE"] == "build" :
    libenv = env.Clone()
    libenv.UseFlags(env["SWIFTEN_FLAGS"])
    libenv.UseFlags(env["SWIFTEN_DEP_FLAGS"])
    libenv.StaticLibrary("Limber", [
            "Server/ServerFromClientSession.cpp",
            "Server/ServerSession.cpp",
            "Server/ServerStanzaRouter.cpp",
            "Server/SimpleUserRegistry.cpp",
            "Server/UserRegistry.cpp",
        ])

    myenv = env.Clone()
    myenv.BuildVersion("BuildVersion.h", project = "limber")
    myenv.UseFlags(env["LIMBER_FLAGS"])
    myenv.UseFlags(env["SWIFTEN_FLAGS"])
    myenv.UseFlags(env["SWIFTEN_DEP_FLAGS"])
    myenv.Program("limber", ["main.cpp"])

    env.Append(UNITTEST_SOURCES = [
            File("Server/UnitTest/ServerStanzaRouterTest.cpp"),
        ])
